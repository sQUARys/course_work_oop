@startuml
namespace main {
    class Bus << (S,Aquamarine) >> {
        - number: int
        - routeNumber: int
        - route: *BusRoute
        - position: *Stop
        - positionIndex: int
        - passengers: int
        - capacity: int

        - startWorking(в wg *sync.WaitGroup)
        - startTwoSideRoute() 
        - goToNextStop() 
        - goToPrevStop() 

    }
    class BusController << (S,Aquamarine) >> {
        - buses: []*Bus

        + Simulate()
    }
    class BusRoute << (S,Aquamarine) >> {
        - stops: []*Stop
        - wayTime: <font color=blue>map</font>[*Stop]int
        - timeGapBetweenBuses: time.Duration
        - countOfBussesNeededInTheRoute: <font color=blue>func</font>(в time.Time): вых int
        - countOfCurrentBusesInTheRoute: int

    }
    class Passenger << (S,Aquamarine) >> {
        - startTimeOfWaiting: time.Time

    }
    class Stop << (S,Aquamarine) >> {
        - name: string
        - passengerCount: int
        - waitingPassengers: []Passenger

    }
}
"sync.Mutex" *-- "main.Stop"


@enduml
